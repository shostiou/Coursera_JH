Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. 
In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. 
For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. 
You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. 
You will be required to prepare the dataset for the analysis you choose to do. 
As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." 
It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. 
You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. 
If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = Primary Key : 10000 /  Foreign Keys : 8090 Business_id and 9581 user_id
vi. Checkin = 493
vii. Photo = Primary Key : 10000 /  Foreign Key : 6493 Business_id
viii. Tip = Foreign Keys : 3979 Business_id and 537 user_id
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	SQL code used to arrive at answer:
		
		SELECT COUNT(*) FROM USER
		WHERE 
			-- Performing a column by column check for NULL
			name IS NULL OR
			review_count IS NULL OR
			yelping_since IS NULL OR
			useful IS NULL OR
			funny IS NULL OR
			cool IS NULL OR
			fans IS NULL OR
			average_stars IS NULL OR
			compliment_hot IS NULL OR
			compliment_more IS NULL OR
			compliment_profile IS NULL OR
			compliment_cute IS NULL OR
			compliment_list IS NULL OR
			compliment_note IS NULL OR
			compliment_plain IS NULL OR
			compliment_cool IS NULL OR
			compliment_funny IS NULL OR   
			compliment_writer IS NULL OR
			compliment_photos IS NULL
			-- End of NULL check
	   ;
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0		max: 5.0		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
		-- Data will be collected from the business table : city, review_count
		SELECT review_count
			   ,city
		FROM business
		-- Grouping by city & ORDER BY review_count DESC
		GROUP BY City ORDER By review_count DESC;

	
	Copy and Paste the Result Below:
		+--------------+------------------------+
		| review_count | city                   |
		+--------------+------------------------+
		|          242 | Woodmere Village       |
		|          138 | Mount Lebanon          |
		|          120 | Charlotte              |
		|          112 | McMurray               |
		|          109 | North York             |
		|           89 | Enterprise             |
		|           77 | Matthews               |
		|           74 | Munroe Falls           |
		|           69 | Ahwatukee              |
		|           68 | Pittsburgh             |
		|           68 | Woodmere               |
		|           65 | Tolleson               |
		|           63 | Pineville              |
		|           61 | Carnegie               |
		|           58 | Macedonia              |
		|           54 | Markham                |
		|           52 | Whitchurch-Stouffville |
		|           50 | Windsor                |
		|           49 | Goodyear               |
		|           45 | Gibsonia               |
		|           44 | Summerlin              |
		|           42 | Peninsula              |
		|           42 | Richfield              |
		|           40 | Dormont                |
		|           40 | nboulder city          |
		+--------------+------------------------+
		(Output limit exceeded, 25 of 362 total rows shown)
	
	
	
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	-- Querying the business table by counting number of stars per stars rated for the city of Avon
	SELECT stars AS Star_Rating,COUNT(stars) FROM business
	WHERE city = 'Avon'
	GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
	
	+-------------+--------------+
	| Star_Rating | COUNT(stars) |
	+-------------+--------------+
	|         1.5 |            1 |
	|         2.5 |            2 |
	|         3.5 |            3 |
	|         4.0 |            2 |
	|         4.5 |            1 |
	|         5.0 |            1 |
	+-------------+--------------+





ii. Beachwood

SQL code used to arrive at answer:

	-- Querying the business table by counting number of stars per stars rated for the city of Beachwood
	SELECT stars AS Star_Rating,COUNT(stars) FROM business
	WHERE city = 'Beachwood'
	GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

	+-------------+--------------+
	| Star_Rating | COUNT(stars) |
	+-------------+--------------+
	|         2.0 |            1 |
	|         2.5 |            1 |
	|         3.0 |            2 |
	|         3.5 |            2 |
	|         4.0 |            1 |
	|         4.5 |            2 |
	|         5.0 |            5 |
	+-------------+--------------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
		-- Querying the user table and sorting result by review_count in Desc order
		SELECT name
			  ,review_count
		FROM user
		ORDER BY review_count Desc
		-- Limiting result to TOP 3
		LIMIT 3
	
	Copy and Paste the Result Below:
	
		+--------+--------------+
		| name   | review_count |
		+--------+--------------+
		| Gerald |         2000 |
		| Sara   |         1629 |
		| Yuri   |         1339 |
		+--------+--------------+



	


8. Does posing more reviews correlate with more fans?

		NO !

	Please explain your findings and interpretation of the results:
		
		Extending the previous querry by embedding fans column and sorting results by fans numbers (descending order)
		shows that the user having the highest number of fans (Amy) has published 609 reviews. 
		Gerald, who published 2000 reviews has only 253 fans.
		This is stated by the table below :
		
		+-----------+--------------+------+
		| name      | review_count | fans |
		+-----------+--------------+------+
		| Amy       |          609 |  503 |
		| Mimi      |          968 |  497 |
		| Harald    |         1153 |  311 |
		| Gerald    |         2000 |  253 |
		| Christine |          930 |  173 |
		| Lisa      |          813 |  159 |
		| Cat       |          377 |  133 |
		| William   |         1215 |  126 |
		| Fran      |          862 |  124 |
		| Lissa     |          834 |  120 |
		| Mark      |          861 |  115 |
		| Tiffany   |          408 |  111 |
	
	
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
		- love has 1780 occurences
		- hate has 232 occurences
		So at the end, we can conclude that there are more reviews containing the word "love" !
	
	SQL code used to arrive at answer:

		/* Two querries will be addressed to the review table
		 count will be done on the primary key "id" of the table review
		words "love" and "hate" will be searched on the text column
		Please note that for consistency purposes, text will be converted to lower case
		wildcards will be used to check if key words appear in the text column*/
		-- Querry 1 : searching for love
		SELECT COUNT(id) FROM review
		WHERE LOWER(text) LIKE ('%love%');
		-- Querry 2 : searching for hate
		SELECT COUNT(id) FROM review
		WHERE LOWER(text) LIKE ('%hate%');
	
	

	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
		-- Querying the user table and sorting result by number of fans in Desc order
		SELECT name
			  ,fans
		FROM user
		ORDER BY fans Desc
		-- Limiting result to TOP 10
		LIMIT 10
	
	
	Copy and Paste the Result Below:

		+-----------+------+
		| name      | fans |
		+-----------+------+
		| Amy       |  503 |
		| Mimi      |  497 |
		| Harald    |  311 |
		| Gerald    |  253 |
		| Christine |  173 |
		| Lisa      |  159 |
		| Cat       |  133 |
		| William   |  126 |
		| Fran      |  124 |
		| Lissa     |  120 |
		+-----------+------+
	
	
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" 
Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
	
		SELECT name
			  ,fans
			  ,useful
			  ,funny
			  -- Then we calculate funny & useful ratios (topic/nb_of_fans)
			  ,useful/fans AS useful_Ratio
			  ,funny/fans AS funny_Ratio
			  -- CASE Statement will allow us to classify funny/useful person
			  ,CASE
			      -- Funny
			      WHEN funny/fans <50 THEN 'Low'
			      WHEN funny/fans >=50 AND funny/fans <300 THEN 'Medium'
			      WHEN funny/fans >=300 THEN 'High'
			   END FunnyClass
			   ,CASE
			      -- Funny
			      WHEN useful/fans <50 THEN 'Low'
			      WHEN useful/fans >=50 AND useful/fans <300 THEN 'Medium'
			      WHEN useful/fans >=300 THEN 'High'
			   END UsefulClass
		FROM user
		ORDER BY fans DESC
		LIMIT 10;

	
	Copy and Paste the Result Below:
	
		+-----------+------+--------+--------+--------------+-------------+------------+-------------+
		| name      | fans | useful |  funny | useful_Ratio | funny_Ratio | FunnyClass | UsefulClass |
		+-----------+------+--------+--------+--------------+-------------+------------+-------------+
		| Amy       |  503 |   3226 |   2554 |            6 |           5 | Low        | Low         |
		| Mimi      |  497 |    257 |    138 |            0 |           0 | Low        | Low         |
		| Harald    |  311 | 122921 | 122419 |          395 |         393 | High       | High        |
		| Gerald    |  253 |  17524 |   2324 |           69 |           9 | Low        | Medium      |
		| Christine |  173 |   4834 |   6646 |           27 |          38 | Low        | Low         |
		| Lisa      |  159 |     48 |     13 |            0 |           0 | Low        | Low         |
		| Cat       |  133 |   1062 |    672 |            7 |           5 | Low        | Low         |
		| William   |  126 |   9363 |   9361 |           74 |          74 | Medium     | Medium      |
		| Fran      |  124 |   9851 |   7606 |           79 |          61 | Medium     | Medium      |
		| Lissa     |  120 |    455 |    150 |            3 |           1 | Low        | Low         |
		+-----------+------+--------+--------+--------------+-------------+------------+-------------+
	
		
	Please explain your findings and interpretation of the results:
	
	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?


ii. Do the two groups you chose to analyze have a different number of reviews?
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

SQL code used for analysis:

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         
         
ii. Difference 2:
         
         
         
SQL code used for analysis:

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
                  
iii. Output of your finished dataset:
         
         
iv. Provide the SQL code you used to create your final dataset:

